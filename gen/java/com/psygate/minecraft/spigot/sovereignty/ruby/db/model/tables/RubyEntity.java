/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.ruby.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.ruby.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.ruby.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.ruby.db.model.tables.records.RubyEntityRecord;
import com.psygate.minecraft.spigot.sovereignty.ruby.events.RecordEntityType;
import com.psygate.minecraft.spigot.sovereignty.ruby.sql.util.EntityTypeConverter;
import com.psygate.minecraft.spigot.sovereignty.ruby.sql.util.RecordEntityTypeConverter;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.bukkit.entity.EntityType;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RubyEntity extends TableImpl<RubyEntityRecord> {

	private static final long serialVersionUID = 670584731;

	/**
	 * The reference instance of <code>nucleus.ruby_entity</code>
	 */
	public static final RubyEntity RUBY_ENTITY = new RubyEntity();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RubyEntityRecord> getRecordType() {
		return RubyEntityRecord.class;
	}

	/**
	 * The column <code>nucleus.ruby_entity.id</code>.
	 */
	public final TableField<RubyEntityRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ruby_entity.record_id</code>.
	 */
	public final TableField<RubyEntityRecord, Long> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ruby_entity.entity_type</code>.
	 */
	public final TableField<RubyEntityRecord, EntityType> ENTITY_TYPE = createField("entity_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "", new EntityTypeConverter());

	/**
	 * The column <code>nucleus.ruby_entity.entity_name</code>.
	 */
	public final TableField<RubyEntityRecord, String> ENTITY_NAME = createField("entity_name", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>nucleus.ruby_entity.record_entity_type</code>.
	 */
	public final TableField<RubyEntityRecord, RecordEntityType> RECORD_ENTITY_TYPE = createField("record_entity_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "", new RecordEntityTypeConverter());

	/**
	 * Create a <code>nucleus.ruby_entity</code> table reference
	 */
	public RubyEntity() {
		this("ruby_entity", null);
	}

	/**
	 * Create an aliased <code>nucleus.ruby_entity</code> table reference
	 */
	public RubyEntity(String alias) {
		this(alias, RUBY_ENTITY);
	}

	private RubyEntity(String alias, Table<RubyEntityRecord> aliased) {
		this(alias, aliased, null);
	}

	private RubyEntity(String alias, Table<RubyEntityRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RubyEntityRecord, Long> getIdentity() {
		return Keys.IDENTITY_RUBY_ENTITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RubyEntityRecord> getPrimaryKey() {
		return Keys.KEY_RUBY_ENTITY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RubyEntityRecord>> getKeys() {
		return Arrays.<UniqueKey<RubyEntityRecord>>asList(Keys.KEY_RUBY_ENTITY_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RubyEntityRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RubyEntityRecord, ?>>asList(Keys.RUBY_ENTITY_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RubyEntity as(String alias) {
		return new RubyEntity(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RubyEntity rename(String name) {
		return new RubyEntity(name, null);
	}
}
