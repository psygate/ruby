/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.ruby.db.model.tables.pojos;


import com.psygate.minecraft.spigot.sovereignty.ruby.db.model.tables.interfaces.IRubyLocation;
import com.psygate.minecraft.spigot.sovereignty.ruby.events.RecordLocationType;

import java.util.UUID;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RubyLocation implements IRubyLocation {

	private static final long serialVersionUID = -40221105;

	private final Long               id;
	private final Integer            x;
	private final Integer            y;
	private final Integer            z;
	private final UUID               worldUuid;
	private final Long               recordId;
	private final RecordLocationType recordLocationType;

	public RubyLocation(RubyLocation value) {
		this.id = value.id;
		this.x = value.x;
		this.y = value.y;
		this.z = value.z;
		this.worldUuid = value.worldUuid;
		this.recordId = value.recordId;
		this.recordLocationType = value.recordLocationType;
	}

	public RubyLocation(
		Long               id,
		Integer            x,
		Integer            y,
		Integer            z,
		UUID               worldUuid,
		Long               recordId,
		RecordLocationType recordLocationType
	) {
		this.id = id;
		this.x = x;
		this.y = y;
		this.z = z;
		this.worldUuid = worldUuid;
		this.recordId = recordId;
		this.recordLocationType = recordLocationType;
	}

	@Override
	public Long getId() {
		return this.id;
	}

	@Override
	public Integer getX() {
		return this.x;
	}

	@Override
	public Integer getY() {
		return this.y;
	}

	@Override
	public Integer getZ() {
		return this.z;
	}

	@Override
	public UUID getWorldUuid() {
		return this.worldUuid;
	}

	@Override
	public Long getRecordId() {
		return this.recordId;
	}

	@Override
	public RecordLocationType getRecordLocationType() {
		return this.recordLocationType;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("RubyLocation (");

		sb.append(id);
		sb.append(", ").append(x);
		sb.append(", ").append(y);
		sb.append(", ").append(z);
		sb.append(", ").append(worldUuid);
		sb.append(", ").append(recordId);
		sb.append(", ").append(recordLocationType);

		sb.append(")");
		return sb.toString();
	}
}
