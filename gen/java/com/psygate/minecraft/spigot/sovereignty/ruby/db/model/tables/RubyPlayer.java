/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.ruby.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.UUIDByteConverter;
import com.psygate.minecraft.spigot.sovereignty.ruby.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.ruby.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.ruby.db.model.tables.records.RubyPlayerRecord;
import com.psygate.minecraft.spigot.sovereignty.ruby.events.RecordPlayerType;
import com.psygate.minecraft.spigot.sovereignty.ruby.sql.util.RecordPlayerTypeConverter;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RubyPlayer extends TableImpl<RubyPlayerRecord> {

	private static final long serialVersionUID = -380089875;

	/**
	 * The reference instance of <code>nucleus.ruby_player</code>
	 */
	public static final RubyPlayer RUBY_PLAYER = new RubyPlayer();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RubyPlayerRecord> getRecordType() {
		return RubyPlayerRecord.class;
	}

	/**
	 * The column <code>nucleus.ruby_player.id</code>.
	 */
	public final TableField<RubyPlayerRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ruby_player.record_id</code>.
	 */
	public final TableField<RubyPlayerRecord, Long> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ruby_player.puuid</code>.
	 */
	public final TableField<RubyPlayerRecord, UUID> PUUID = createField("puuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * The column <code>nucleus.ruby_player.record_player_type</code>.
	 */
	public final TableField<RubyPlayerRecord, RecordPlayerType> RECORD_PLAYER_TYPE = createField("record_player_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "", new RecordPlayerTypeConverter());

	/**
	 * Create a <code>nucleus.ruby_player</code> table reference
	 */
	public RubyPlayer() {
		this("ruby_player", null);
	}

	/**
	 * Create an aliased <code>nucleus.ruby_player</code> table reference
	 */
	public RubyPlayer(String alias) {
		this(alias, RUBY_PLAYER);
	}

	private RubyPlayer(String alias, Table<RubyPlayerRecord> aliased) {
		this(alias, aliased, null);
	}

	private RubyPlayer(String alias, Table<RubyPlayerRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RubyPlayerRecord, Long> getIdentity() {
		return Keys.IDENTITY_RUBY_PLAYER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RubyPlayerRecord> getPrimaryKey() {
		return Keys.KEY_RUBY_PLAYER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RubyPlayerRecord>> getKeys() {
		return Arrays.<UniqueKey<RubyPlayerRecord>>asList(Keys.KEY_RUBY_PLAYER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RubyPlayerRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RubyPlayerRecord, ?>>asList(Keys.RUBY_PLAYER_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RubyPlayer as(String alias) {
		return new RubyPlayer(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RubyPlayer rename(String name) {
		return new RubyPlayer(name, null);
	}
}
